name: Deploy to Development

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if tests fail'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  ENVIRONMENT: development

jobs:
  deploy-development:
    name: Deploy to Development Environment
    runs-on: ubuntu-latest
    environment: 
      name: development
      url: https://dev.bluebirdub.com
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push development images
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to development server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DEV_HOST }}
        username: ${{ secrets.DEV_USERNAME }}
        key: ${{ secrets.DEV_SSH_KEY }}
        port: ${{ secrets.DEV_PORT }}
        script: |
          # Pull the latest images
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-latest
          
          # Stop existing containers
          docker-compose -f docker-compose.dev.yml down || true
          
          # Start new containers
          docker-compose -f docker-compose.dev.yml up -d
          
          # Wait for services to be ready
          sleep 30
          
          # Run health checks
          curl -f http://localhost:8000/health || exit 1
          
          # Run database migrations
          docker-compose -f docker-compose.dev.yml exec -T ordnungshub-backend python -m alembic upgrade head

    - name: Run Archon integration tests in development
      run: |
        # Wait for deployment to stabilize
        sleep 60
        
        # Run comprehensive Archon tests against development environment
        python scripts/archon_functional_test.py --environment=development --host=${{ secrets.DEV_HOST }}
      env:
        DEV_API_KEY: ${{ secrets.DEV_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      continue-on-error: true

    - name: Notify deployment status
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        text: |
          Development deployment ${{ job.status }}!
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          Environment: https://dev.bluebirdub.com
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    - name: Update deployment status
      if: always()
      run: |
        echo "Development deployment completed with status: ${{ job.status }}"
        echo "Environment URL: https://dev.bluebirdub.com"
        echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev-${{ github.sha }}"